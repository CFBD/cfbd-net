// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DraftPick : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The collegeAthleteId property</summary>
        public int? CollegeAthleteId { get; set; }
        /// <summary>The collegeConference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CollegeConference { get; set; }
#nullable restore
#else
        public string CollegeConference { get; set; }
#endif
        /// <summary>The collegeId property</summary>
        public int? CollegeId { get; set; }
        /// <summary>The collegeTeam property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CollegeTeam { get; set; }
#nullable restore
#else
        public string CollegeTeam { get; set; }
#endif
        /// <summary>The height property</summary>
        public double? Height { get; set; }
        /// <summary>The hometownInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.DraftPick_hometownInfo? HometownInfo { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.DraftPick_hometownInfo HometownInfo { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The nflAthleteId property</summary>
        public int? NflAthleteId { get; set; }
        /// <summary>The nflTeam property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NflTeam { get; set; }
#nullable restore
#else
        public string NflTeam { get; set; }
#endif
        /// <summary>The nflTeamId property</summary>
        public int? NflTeamId { get; set; }
        /// <summary>The overall property</summary>
        public int? Overall { get; set; }
        /// <summary>The pick property</summary>
        public int? Pick { get; set; }
        /// <summary>The position property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>The preDraftGrade property</summary>
        public int? PreDraftGrade { get; set; }
        /// <summary>The preDraftPositionRanking property</summary>
        public int? PreDraftPositionRanking { get; set; }
        /// <summary>The preDraftRanking property</summary>
        public int? PreDraftRanking { get; set; }
        /// <summary>The round property</summary>
        public int? Round { get; set; }
        /// <summary>The weight property</summary>
        public int? Weight { get; set; }
        /// <summary>The year property</summary>
        public int? Year { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.DraftPick"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.DraftPick CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.DraftPick();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "collegeAthleteId", n => { CollegeAthleteId = n.GetIntValue(); } },
                { "collegeConference", n => { CollegeConference = n.GetStringValue(); } },
                { "collegeId", n => { CollegeId = n.GetIntValue(); } },
                { "collegeTeam", n => { CollegeTeam = n.GetStringValue(); } },
                { "height", n => { Height = n.GetDoubleValue(); } },
                { "hometownInfo", n => { HometownInfo = n.GetObjectValue<global::CollegeFootballData.Models.DraftPick_hometownInfo>(global::CollegeFootballData.Models.DraftPick_hometownInfo.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "nflAthleteId", n => { NflAthleteId = n.GetIntValue(); } },
                { "nflTeam", n => { NflTeam = n.GetStringValue(); } },
                { "nflTeamId", n => { NflTeamId = n.GetIntValue(); } },
                { "overall", n => { Overall = n.GetIntValue(); } },
                { "pick", n => { Pick = n.GetIntValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "preDraftGrade", n => { PreDraftGrade = n.GetIntValue(); } },
                { "preDraftPositionRanking", n => { PreDraftPositionRanking = n.GetIntValue(); } },
                { "preDraftRanking", n => { PreDraftRanking = n.GetIntValue(); } },
                { "round", n => { Round = n.GetIntValue(); } },
                { "weight", n => { Weight = n.GetIntValue(); } },
                { "year", n => { Year = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("collegeAthleteId", CollegeAthleteId);
            writer.WriteStringValue("collegeConference", CollegeConference);
            writer.WriteIntValue("collegeId", CollegeId);
            writer.WriteStringValue("collegeTeam", CollegeTeam);
            writer.WriteDoubleValue("height", Height);
            writer.WriteObjectValue<global::CollegeFootballData.Models.DraftPick_hometownInfo>("hometownInfo", HometownInfo);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("nflAthleteId", NflAthleteId);
            writer.WriteStringValue("nflTeam", NflTeam);
            writer.WriteIntValue("nflTeamId", NflTeamId);
            writer.WriteIntValue("overall", Overall);
            writer.WriteIntValue("pick", Pick);
            writer.WriteStringValue("position", Position);
            writer.WriteIntValue("preDraftGrade", PreDraftGrade);
            writer.WriteIntValue("preDraftPositionRanking", PreDraftPositionRanking);
            writer.WriteIntValue("preDraftRanking", PreDraftRanking);
            writer.WriteIntValue("round", Round);
            writer.WriteIntValue("weight", Weight);
            writer.WriteIntValue("year", Year);
        }
    }
}
#pragma warning restore CS0618
