// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AdvancedBoxScore_teams : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cumulativePpa property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamPPA>? CumulativePpa { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamPPA> CumulativePpa { get; set; }
#endif
        /// <summary>The explosiveness property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamExplosiveness>? Explosiveness { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamExplosiveness> Explosiveness { get; set; }
#endif
        /// <summary>The fieldPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamFieldPosition>? FieldPosition { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamFieldPosition> FieldPosition { get; set; }
#endif
        /// <summary>The havoc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamHavoc>? Havoc { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamHavoc> Havoc { get; set; }
#endif
        /// <summary>The ppa property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamPPA>? Ppa { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamPPA> Ppa { get; set; }
#endif
        /// <summary>The rushing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamRushingStats>? Rushing { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamRushingStats> Rushing { get; set; }
#endif
        /// <summary>The scoringOpportunities property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamScoringOpportunities>? ScoringOpportunities { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamScoringOpportunities> ScoringOpportunities { get; set; }
#endif
        /// <summary>The successRates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.TeamSuccessRates>? SuccessRates { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.TeamSuccessRates> SuccessRates { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CollegeFootballData.Models.AdvancedBoxScore_teams"/> and sets the default values.
        /// </summary>
        public AdvancedBoxScore_teams()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.AdvancedBoxScore_teams"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.AdvancedBoxScore_teams CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.AdvancedBoxScore_teams();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cumulativePpa", n => { CumulativePpa = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamPPA>(global::CollegeFootballData.Models.TeamPPA.CreateFromDiscriminatorValue)?.AsList(); } },
                { "explosiveness", n => { Explosiveness = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamExplosiveness>(global::CollegeFootballData.Models.TeamExplosiveness.CreateFromDiscriminatorValue)?.AsList(); } },
                { "fieldPosition", n => { FieldPosition = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamFieldPosition>(global::CollegeFootballData.Models.TeamFieldPosition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "havoc", n => { Havoc = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamHavoc>(global::CollegeFootballData.Models.TeamHavoc.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ppa", n => { Ppa = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamPPA>(global::CollegeFootballData.Models.TeamPPA.CreateFromDiscriminatorValue)?.AsList(); } },
                { "rushing", n => { Rushing = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamRushingStats>(global::CollegeFootballData.Models.TeamRushingStats.CreateFromDiscriminatorValue)?.AsList(); } },
                { "scoringOpportunities", n => { ScoringOpportunities = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamScoringOpportunities>(global::CollegeFootballData.Models.TeamScoringOpportunities.CreateFromDiscriminatorValue)?.AsList(); } },
                { "successRates", n => { SuccessRates = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.TeamSuccessRates>(global::CollegeFootballData.Models.TeamSuccessRates.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamPPA>("cumulativePpa", CumulativePpa);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamExplosiveness>("explosiveness", Explosiveness);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamFieldPosition>("fieldPosition", FieldPosition);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamHavoc>("havoc", Havoc);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamPPA>("ppa", Ppa);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamRushingStats>("rushing", Rushing);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamScoringOpportunities>("scoringOpportunities", ScoringOpportunities);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.TeamSuccessRates>("successRates", SuccessRates);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
