// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AdvancedGameStat_offense_passingDowns : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The explosiveness property</summary>
        public double? Explosiveness { get; set; }
        /// <summary>The ppa property</summary>
        public double? Ppa { get; set; }
        /// <summary>The successRate property</summary>
        public double? SuccessRate { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::CollegeFootballData.Models.AdvancedGameStat_offense_passingDowns"/> and sets the default values.
        /// </summary>
        public AdvancedGameStat_offense_passingDowns()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.AdvancedGameStat_offense_passingDowns"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.AdvancedGameStat_offense_passingDowns CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.AdvancedGameStat_offense_passingDowns();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "explosiveness", n => { Explosiveness = n.GetDoubleValue(); } },
                { "ppa", n => { Ppa = n.GetDoubleValue(); } },
                { "successRate", n => { SuccessRate = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("explosiveness", Explosiveness);
            writer.WriteDoubleValue("ppa", Ppa);
            writer.WriteDoubleValue("successRate", SuccessRate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
