// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AdjustedTeamMetrics : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The conference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conference { get; set; }
#nullable restore
#else
        public string Conference { get; set; }
#endif
        /// <summary>The epa property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_epa? Epa { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_epa Epa { get; set; }
#endif
        /// <summary>The epaAllowed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_epaAllowed? EpaAllowed { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_epaAllowed EpaAllowed { get; set; }
#endif
        /// <summary>The explosiveness property</summary>
        public double? Explosiveness { get; set; }
        /// <summary>The explosivenessAllowed property</summary>
        public double? ExplosivenessAllowed { get; set; }
        /// <summary>The rushing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_rushing? Rushing { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_rushing Rushing { get; set; }
#endif
        /// <summary>The rushingAllowed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_rushingAllowed? RushingAllowed { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_rushingAllowed RushingAllowed { get; set; }
#endif
        /// <summary>The successRate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_successRate? SuccessRate { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_successRate SuccessRate { get; set; }
#endif
        /// <summary>The successRateAllowed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_successRateAllowed? SuccessRateAllowed { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdjustedTeamMetrics_successRateAllowed SuccessRateAllowed { get; set; }
#endif
        /// <summary>The team property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Team { get; set; }
#nullable restore
#else
        public string Team { get; set; }
#endif
        /// <summary>The teamId property</summary>
        public int? TeamId { get; set; }
        /// <summary>The year property</summary>
        public int? Year { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.AdjustedTeamMetrics"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.AdjustedTeamMetrics CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.AdjustedTeamMetrics();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "conference", n => { Conference = n.GetStringValue(); } },
                { "epa", n => { Epa = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_epa>(global::CollegeFootballData.Models.AdjustedTeamMetrics_epa.CreateFromDiscriminatorValue); } },
                { "epaAllowed", n => { EpaAllowed = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_epaAllowed>(global::CollegeFootballData.Models.AdjustedTeamMetrics_epaAllowed.CreateFromDiscriminatorValue); } },
                { "explosiveness", n => { Explosiveness = n.GetDoubleValue(); } },
                { "explosivenessAllowed", n => { ExplosivenessAllowed = n.GetDoubleValue(); } },
                { "rushing", n => { Rushing = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_rushing>(global::CollegeFootballData.Models.AdjustedTeamMetrics_rushing.CreateFromDiscriminatorValue); } },
                { "rushingAllowed", n => { RushingAllowed = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_rushingAllowed>(global::CollegeFootballData.Models.AdjustedTeamMetrics_rushingAllowed.CreateFromDiscriminatorValue); } },
                { "successRate", n => { SuccessRate = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_successRate>(global::CollegeFootballData.Models.AdjustedTeamMetrics_successRate.CreateFromDiscriminatorValue); } },
                { "successRateAllowed", n => { SuccessRateAllowed = n.GetObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_successRateAllowed>(global::CollegeFootballData.Models.AdjustedTeamMetrics_successRateAllowed.CreateFromDiscriminatorValue); } },
                { "team", n => { Team = n.GetStringValue(); } },
                { "teamId", n => { TeamId = n.GetIntValue(); } },
                { "year", n => { Year = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("conference", Conference);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_epa>("epa", Epa);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_epaAllowed>("epaAllowed", EpaAllowed);
            writer.WriteDoubleValue("explosiveness", Explosiveness);
            writer.WriteDoubleValue("explosivenessAllowed", ExplosivenessAllowed);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_rushing>("rushing", Rushing);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_rushingAllowed>("rushingAllowed", RushingAllowed);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_successRate>("successRate", SuccessRate);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdjustedTeamMetrics_successRateAllowed>("successRateAllowed", SuccessRateAllowed);
            writer.WriteStringValue("team", Team);
            writer.WriteIntValue("teamId", TeamId);
            writer.WriteIntValue("year", Year);
        }
    }
}
#pragma warning restore CS0618
