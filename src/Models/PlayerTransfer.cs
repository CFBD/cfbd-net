// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PlayerTransfer : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The destination property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Destination { get; set; }
#nullable restore
#else
        public string Destination { get; set; }
#endif
        /// <summary>The eligibility property</summary>
        public global::CollegeFootballData.Models.TransferEligibility? Eligibility { get; set; }
        /// <summary>The firstName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The lastName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The origin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Origin { get; set; }
#nullable restore
#else
        public string Origin { get; set; }
#endif
        /// <summary>The position property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>The rating property</summary>
        public double? Rating { get; set; }
        /// <summary>The season property</summary>
        public int? Season { get; set; }
        /// <summary>The stars property</summary>
        public int? Stars { get; set; }
        /// <summary>The transferDate property</summary>
        public DateTimeOffset? TransferDate { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.PlayerTransfer"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.PlayerTransfer CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.PlayerTransfer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "destination", n => { Destination = n.GetStringValue(); } },
                { "eligibility", n => { Eligibility = n.GetEnumValue<global::CollegeFootballData.Models.TransferEligibility>(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "origin", n => { Origin = n.GetStringValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "rating", n => { Rating = n.GetDoubleValue(); } },
                { "season", n => { Season = n.GetIntValue(); } },
                { "stars", n => { Stars = n.GetIntValue(); } },
                { "transferDate", n => { TransferDate = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("destination", Destination);
            writer.WriteEnumValue<global::CollegeFootballData.Models.TransferEligibility>("eligibility", Eligibility);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteStringValue("origin", Origin);
            writer.WriteStringValue("position", Position);
            writer.WriteDoubleValue("rating", Rating);
            writer.WriteIntValue("season", Season);
            writer.WriteIntValue("stars", Stars);
            writer.WriteDateTimeOffsetValue("transferDate", TransferDate);
        }
    }
}
#pragma warning restore CS0618
