// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class KickerPAAR : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The athleteId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AthleteId { get; set; }
#nullable restore
#else
        public string AthleteId { get; set; }
#endif
        /// <summary>The athleteName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AthleteName { get; set; }
#nullable restore
#else
        public string AthleteName { get; set; }
#endif
        /// <summary>The attempts property</summary>
        public int? Attempts { get; set; }
        /// <summary>The conference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conference { get; set; }
#nullable restore
#else
        public string Conference { get; set; }
#endif
        /// <summary>The paar property</summary>
        public double? Paar { get; set; }
        /// <summary>The team property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Team { get; set; }
#nullable restore
#else
        public string Team { get; set; }
#endif
        /// <summary>The year property</summary>
        public int? Year { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.KickerPAAR"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.KickerPAAR CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.KickerPAAR();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "athleteId", n => { AthleteId = n.GetStringValue(); } },
                { "athleteName", n => { AthleteName = n.GetStringValue(); } },
                { "attempts", n => { Attempts = n.GetIntValue(); } },
                { "conference", n => { Conference = n.GetStringValue(); } },
                { "paar", n => { Paar = n.GetDoubleValue(); } },
                { "team", n => { Team = n.GetStringValue(); } },
                { "year", n => { Year = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("athleteId", AthleteId);
            writer.WriteStringValue("athleteName", AthleteName);
            writer.WriteIntValue("attempts", Attempts);
            writer.WriteStringValue("conference", Conference);
            writer.WriteDoubleValue("paar", Paar);
            writer.WriteStringValue("team", Team);
            writer.WriteIntValue("year", Year);
        }
    }
}
#pragma warning restore CS0618
