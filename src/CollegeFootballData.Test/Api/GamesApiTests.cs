/*
 * College Football Data API
 *
 * This is an API for query various college football datasets and analytics. API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 5.6.2
 * Contact: admin@collegefootballdata.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CollegeFootballData.Client;
using CollegeFootballData.Api;
// uncomment below to import models
//using CollegeFootballData.Model;

namespace CollegeFootballData.Test.Api
{
    /// <summary>
    ///  Class for testing GamesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GamesApiTests : IDisposable
    {
        private GamesApi instance;

        public GamesApiTests()
        {
            instance = new GamesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GamesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GamesApi
            //Assert.IsType<GamesApi>(instance);
        }

        /// <summary>
        /// Test GetAdvancedBoxScore
        /// </summary>
        [Fact]
        public void GetAdvancedBoxScoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.GetAdvancedBoxScore(id);
            //Assert.IsType<AdvancedBoxScore>(response);
        }

        /// <summary>
        /// Test GetCalendar
        /// </summary>
        [Fact]
        public void GetCalendarTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //var response = instance.GetCalendar(year);
            //Assert.IsType<List<CalendarWeek>>(response);
        }

        /// <summary>
        /// Test GetGamePlayerStats
        /// </summary>
        [Fact]
        public void GetGamePlayerStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? week = null;
            //string? team = null;
            //string? conference = null;
            //DivisionClassification? classification = null;
            //SeasonType? seasonType = null;
            //string? category = null;
            //int? id = null;
            //var response = instance.GetGamePlayerStats(year, week, team, conference, classification, seasonType, category, id);
            //Assert.IsType<List<GamePlayerStats>>(response);
        }

        /// <summary>
        /// Test GetGameTeamStats
        /// </summary>
        [Fact]
        public void GetGameTeamStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? week = null;
            //string? team = null;
            //string? conference = null;
            //DivisionClassification? classification = null;
            //SeasonType? seasonType = null;
            //int? id = null;
            //var response = instance.GetGameTeamStats(year, week, team, conference, classification, seasonType, id);
            //Assert.IsType<List<GameTeamStats>>(response);
        }

        /// <summary>
        /// Test GetGames
        /// </summary>
        [Fact]
        public void GetGamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? week = null;
            //SeasonType? seasonType = null;
            //DivisionClassification? classification = null;
            //string? team = null;
            //string? home = null;
            //string? away = null;
            //string? conference = null;
            //int? id = null;
            //var response = instance.GetGames(year, week, seasonType, classification, team, home, away, conference, id);
            //Assert.IsType<List<Game>>(response);
        }

        /// <summary>
        /// Test GetMedia
        /// </summary>
        [Fact]
        public void GetMediaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //SeasonType? seasonType = null;
            //int? week = null;
            //string? team = null;
            //string? conference = null;
            //MediaType? mediaType = null;
            //DivisionClassification? classification = null;
            //var response = instance.GetMedia(year, seasonType, week, team, conference, mediaType, classification);
            //Assert.IsType<List<GameMedia>>(response);
        }

        /// <summary>
        /// Test GetRecords
        /// </summary>
        [Fact]
        public void GetRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string? team = null;
            //string? conference = null;
            //var response = instance.GetRecords(year, team, conference);
            //Assert.IsType<List<TeamRecords>>(response);
        }

        /// <summary>
        /// Test GetScoreboard
        /// </summary>
        [Fact]
        public void GetScoreboardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DivisionClassification? classification = null;
            //string? conference = null;
            //var response = instance.GetScoreboard(classification, conference);
            //Assert.IsType<List<ScoreboardGame>>(response);
        }

        /// <summary>
        /// Test GetWeather
        /// </summary>
        [Fact]
        public void GetWeatherTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //SeasonType? seasonType = null;
            //int? week = null;
            //string? team = null;
            //string? conference = null;
            //DivisionClassification? classification = null;
            //int? gameId = null;
            //var response = instance.GetWeather(year, seasonType, week, team, conference, classification, gameId);
            //Assert.IsType<List<GameWeather>>(response);
        }
    }
}
