/*
 * College Football Data API
 *
 * This is an API for query various college football datasets and analytics. API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 5.6.3
 * Contact: admin@collegefootballdata.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CollegeFootballData.Client;
using CollegeFootballData.Api;
// uncomment below to import models
//using CollegeFootballData.Model;

namespace CollegeFootballData.Test.Api
{
    /// <summary>
    ///  Class for testing StatsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StatsApiTests : IDisposable
    {
        private StatsApi instance;

        public StatsApiTests()
        {
            instance = new StatsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StatsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StatsApi
            //Assert.IsType<StatsApi>(instance);
        }

        /// <summary>
        /// Test GetAdvancedGameStats
        /// </summary>
        [Fact]
        public void GetAdvancedGameStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string? team = null;
            //double? week = null;
            //string? opponent = null;
            //bool? excludeGarbageTime = null;
            //SeasonType? seasonType = null;
            //var response = instance.GetAdvancedGameStats(year, team, week, opponent, excludeGarbageTime, seasonType);
            //Assert.IsType<List<AdvancedGameStat>>(response);
        }

        /// <summary>
        /// Test GetAdvancedSeasonStats
        /// </summary>
        [Fact]
        public void GetAdvancedSeasonStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string? team = null;
            //bool? excludeGarbageTime = null;
            //int? startWeek = null;
            //int? endWeek = null;
            //var response = instance.GetAdvancedSeasonStats(year, team, excludeGarbageTime, startWeek, endWeek);
            //Assert.IsType<List<AdvancedSeasonStat>>(response);
        }

        /// <summary>
        /// Test GetCategories
        /// </summary>
        [Fact]
        public void GetCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCategories();
            //Assert.IsType<List<string>>(response);
        }

        /// <summary>
        /// Test GetPlayerSeasonStats
        /// </summary>
        [Fact]
        public void GetPlayerSeasonStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //string? conference = null;
            //string? team = null;
            //int? startWeek = null;
            //int? endWeek = null;
            //SeasonType? seasonType = null;
            //string? category = null;
            //var response = instance.GetPlayerSeasonStats(year, conference, team, startWeek, endWeek, seasonType, category);
            //Assert.IsType<List<PlayerStat>>(response);
        }

        /// <summary>
        /// Test GetTeamStats
        /// </summary>
        [Fact]
        public void GetTeamStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //string? team = null;
            //string? conference = null;
            //int? startWeek = null;
            //int? endWeek = null;
            //var response = instance.GetTeamStats(year, team, conference, startWeek, endWeek);
            //Assert.IsType<List<TeamStat>>(response);
        }
    }
}
