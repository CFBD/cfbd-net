/*
 * College Football Data API
 *
 * This is an API for query various college football datasets and analytics. API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 5.6.3
 * Contact: admin@collegefootballdata.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CollegeFootballData.Client;
using CollegeFootballData.Api;
// uncomment below to import models
//using CollegeFootballData.Model;

namespace CollegeFootballData.Test.Api
{
    /// <summary>
    ///  Class for testing PlaysApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PlaysApiTests : IDisposable
    {
        private PlaysApi instance;

        public PlaysApiTests()
        {
            instance = new PlaysApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PlaysApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PlaysApi
            //Assert.IsType<PlaysApi>(instance);
        }

        /// <summary>
        /// Test GetLivePlays
        /// </summary>
        [Fact]
        public void GetLivePlaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int gameId = null;
            //var response = instance.GetLivePlays(gameId);
            //Assert.IsType<LiveGame>(response);
        }

        /// <summary>
        /// Test GetPlayStatTypes
        /// </summary>
        [Fact]
        public void GetPlayStatTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPlayStatTypes();
            //Assert.IsType<List<PlayStatType>>(response);
        }

        /// <summary>
        /// Test GetPlayStats
        /// </summary>
        [Fact]
        public void GetPlayStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? year = null;
            //int? week = null;
            //string? team = null;
            //int? gameId = null;
            //int? athleteId = null;
            //int? statTypeId = null;
            //SeasonType? seasonType = null;
            //string? conference = null;
            //var response = instance.GetPlayStats(year, week, team, gameId, athleteId, statTypeId, seasonType, conference);
            //Assert.IsType<List<PlayStat>>(response);
        }

        /// <summary>
        /// Test GetPlayTypes
        /// </summary>
        [Fact]
        public void GetPlayTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPlayTypes();
            //Assert.IsType<List<PlayType>>(response);
        }

        /// <summary>
        /// Test GetPlays
        /// </summary>
        [Fact]
        public void GetPlaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int year = null;
            //int week = null;
            //string? team = null;
            //string? offense = null;
            //string? defense = null;
            //string? offenseConference = null;
            //string? defenseConference = null;
            //string? conference = null;
            //string? playType = null;
            //SeasonType? seasonType = null;
            //DivisionClassification? classification = null;
            //var response = instance.GetPlays(year, week, team, offense, defense, offenseConference, defenseConference, conference, playType, seasonType, classification);
            //Assert.IsType<List<Play>>(response);
        }
    }
}
