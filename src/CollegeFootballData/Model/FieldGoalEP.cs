/*
 * College Football Data API
 *
 * This is an API for query various college football datasets and analytics. API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 5.5.1
 * Contact: admin@collegefootballdata.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CollegeFootballData.Client.OpenAPIDateConverter;

namespace CollegeFootballData.Model
{
    /// <summary>
    /// FieldGoalEP
    /// </summary>
    [DataContract(Name = "FieldGoalEP")]
    public partial class FieldGoalEP : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldGoalEP" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FieldGoalEP() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldGoalEP" /> class.
        /// </summary>
        /// <param name="yardsToGoal">yardsToGoal (required).</param>
        /// <param name="distance">distance (required).</param>
        /// <param name="expectedPoints">expectedPoints (required).</param>
        public FieldGoalEP(int yardsToGoal = default(int), int distance = default(int), double expectedPoints = default(double))
        {
            this.YardsToGoal = yardsToGoal;
            this.Distance = distance;
            this.ExpectedPoints = expectedPoints;
        }

        /// <summary>
        /// Gets or Sets YardsToGoal
        /// </summary>
        [DataMember(Name = "yardsToGoal", IsRequired = true, EmitDefaultValue = true)]
        public int YardsToGoal { get; set; }

        /// <summary>
        /// Gets or Sets Distance
        /// </summary>
        [DataMember(Name = "distance", IsRequired = true, EmitDefaultValue = true)]
        public int Distance { get; set; }

        /// <summary>
        /// Gets or Sets ExpectedPoints
        /// </summary>
        [DataMember(Name = "expectedPoints", IsRequired = true, EmitDefaultValue = true)]
        public double ExpectedPoints { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FieldGoalEP {\n");
            sb.Append("  YardsToGoal: ").Append(YardsToGoal).Append("\n");
            sb.Append("  Distance: ").Append(Distance).Append("\n");
            sb.Append("  ExpectedPoints: ").Append(ExpectedPoints).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
