/*
 * College Football Data API
 *
 * This is an API for query various college football datasets and analytics. API keys can be acquired from the CollegeFootballData.com website.
 *
 * The version of the OpenAPI document: 5.5.1
 * Contact: admin@collegefootballdata.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = CollegeFootballData.Client.OpenAPIDateConverter;

namespace CollegeFootballData.Model
{
    /// <summary>
    /// TeamRecord
    /// </summary>
    [DataContract(Name = "TeamRecord")]
    public partial class TeamRecord : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamRecord" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TeamRecord() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamRecord" /> class.
        /// </summary>
        /// <param name="games">games (required).</param>
        /// <param name="wins">wins (required).</param>
        /// <param name="losses">losses (required).</param>
        /// <param name="ties">ties (required).</param>
        public TeamRecord(int games = default(int), int wins = default(int), int losses = default(int), int ties = default(int))
        {
            this.Games = games;
            this.Wins = wins;
            this.Losses = losses;
            this.Ties = ties;
        }

        /// <summary>
        /// Gets or Sets Games
        /// </summary>
        [DataMember(Name = "games", IsRequired = true, EmitDefaultValue = true)]
        public int Games { get; set; }

        /// <summary>
        /// Gets or Sets Wins
        /// </summary>
        [DataMember(Name = "wins", IsRequired = true, EmitDefaultValue = true)]
        public int Wins { get; set; }

        /// <summary>
        /// Gets or Sets Losses
        /// </summary>
        [DataMember(Name = "losses", IsRequired = true, EmitDefaultValue = true)]
        public int Losses { get; set; }

        /// <summary>
        /// Gets or Sets Ties
        /// </summary>
        [DataMember(Name = "ties", IsRequired = true, EmitDefaultValue = true)]
        public int Ties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TeamRecord {\n");
            sb.Append("  Games: ").Append(Games).Append("\n");
            sb.Append("  Wins: ").Append(Wins).Append("\n");
            sb.Append("  Losses: ").Append(Losses).Append("\n");
            sb.Append("  Ties: ").Append(Ties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
