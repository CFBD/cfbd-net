// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Recruit : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The athleteId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AthleteId { get; set; }
#nullable restore
#else
        public string AthleteId { get; set; }
#endif
        /// <summary>The city property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? City { get; set; }
#nullable restore
#else
        public string City { get; set; }
#endif
        /// <summary>The committedTo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommittedTo { get; set; }
#nullable restore
#else
        public string CommittedTo { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The height property</summary>
        public int? Height { get; set; }
        /// <summary>The hometownInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.Recruit_hometownInfo? HometownInfo { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.Recruit_hometownInfo HometownInfo { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The position property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>The ranking property</summary>
        public int? Ranking { get; set; }
        /// <summary>The rating property</summary>
        public double? Rating { get; set; }
        /// <summary>The recruitType property</summary>
        public global::CollegeFootballData.Models.RecruitClassification? RecruitType { get; set; }
        /// <summary>The school property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? School { get; set; }
#nullable restore
#else
        public string School { get; set; }
#endif
        /// <summary>The stars property</summary>
        public int? Stars { get; set; }
        /// <summary>The stateProvince property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateProvince { get; set; }
#nullable restore
#else
        public string StateProvince { get; set; }
#endif
        /// <summary>The weight property</summary>
        public int? Weight { get; set; }
        /// <summary>The year property</summary>
        public int? Year { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.Recruit"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.Recruit CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.Recruit();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "athleteId", n => { AthleteId = n.GetStringValue(); } },
                { "city", n => { City = n.GetStringValue(); } },
                { "committedTo", n => { CommittedTo = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "height", n => { Height = n.GetIntValue(); } },
                { "hometownInfo", n => { HometownInfo = n.GetObjectValue<global::CollegeFootballData.Models.Recruit_hometownInfo>(global::CollegeFootballData.Models.Recruit_hometownInfo.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "ranking", n => { Ranking = n.GetIntValue(); } },
                { "rating", n => { Rating = n.GetDoubleValue(); } },
                { "recruitType", n => { RecruitType = n.GetEnumValue<global::CollegeFootballData.Models.RecruitClassification>(); } },
                { "school", n => { School = n.GetStringValue(); } },
                { "stars", n => { Stars = n.GetIntValue(); } },
                { "stateProvince", n => { StateProvince = n.GetStringValue(); } },
                { "weight", n => { Weight = n.GetIntValue(); } },
                { "year", n => { Year = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("athleteId", AthleteId);
            writer.WriteStringValue("city", City);
            writer.WriteStringValue("committedTo", CommittedTo);
            writer.WriteStringValue("country", Country);
            writer.WriteIntValue("height", Height);
            writer.WriteObjectValue<global::CollegeFootballData.Models.Recruit_hometownInfo>("hometownInfo", HometownInfo);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("position", Position);
            writer.WriteIntValue("ranking", Ranking);
            writer.WriteDoubleValue("rating", Rating);
            writer.WriteEnumValue<global::CollegeFootballData.Models.RecruitClassification>("recruitType", RecruitType);
            writer.WriteStringValue("school", School);
            writer.WriteIntValue("stars", Stars);
            writer.WriteStringValue("stateProvince", StateProvince);
            writer.WriteIntValue("weight", Weight);
            writer.WriteIntValue("year", Year);
        }
    }
}
#pragma warning restore CS0618
