// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Play : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The away property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Away { get; set; }
#nullable restore
#else
        public string Away { get; set; }
#endif
        /// <summary>The clock property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.Play_clock? Clock { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.Play_clock Clock { get; set; }
#endif
        /// <summary>The defense property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Defense { get; set; }
#nullable restore
#else
        public string Defense { get; set; }
#endif
        /// <summary>The defenseConference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefenseConference { get; set; }
#nullable restore
#else
        public string DefenseConference { get; set; }
#endif
        /// <summary>The defenseScore property</summary>
        public int? DefenseScore { get; set; }
        /// <summary>The defenseTimeouts property</summary>
        public int? DefenseTimeouts { get; set; }
        /// <summary>The distance property</summary>
        public int? Distance { get; set; }
        /// <summary>The down property</summary>
        public int? Down { get; set; }
        /// <summary>The driveId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DriveId { get; set; }
#nullable restore
#else
        public string DriveId { get; set; }
#endif
        /// <summary>The driveNumber property</summary>
        public int? DriveNumber { get; set; }
        /// <summary>The gameId property</summary>
        public int? GameId { get; set; }
        /// <summary>The home property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Home { get; set; }
#nullable restore
#else
        public string Home { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The offense property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Offense { get; set; }
#nullable restore
#else
        public string Offense { get; set; }
#endif
        /// <summary>The offenseConference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OffenseConference { get; set; }
#nullable restore
#else
        public string OffenseConference { get; set; }
#endif
        /// <summary>The offenseScore property</summary>
        public int? OffenseScore { get; set; }
        /// <summary>The offenseTimeouts property</summary>
        public int? OffenseTimeouts { get; set; }
        /// <summary>The period property</summary>
        public int? Period { get; set; }
        /// <summary>The playNumber property</summary>
        public int? PlayNumber { get; set; }
        /// <summary>The playText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlayText { get; set; }
#nullable restore
#else
        public string PlayText { get; set; }
#endif
        /// <summary>The playType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlayType { get; set; }
#nullable restore
#else
        public string PlayType { get; set; }
#endif
        /// <summary>The ppa property</summary>
        public double? Ppa { get; set; }
        /// <summary>The scoring property</summary>
        public bool? Scoring { get; set; }
        /// <summary>The wallclock property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Wallclock { get; set; }
#nullable restore
#else
        public string Wallclock { get; set; }
#endif
        /// <summary>The yardline property</summary>
        public int? Yardline { get; set; }
        /// <summary>The yardsGained property</summary>
        public int? YardsGained { get; set; }
        /// <summary>The yardsToGoal property</summary>
        public int? YardsToGoal { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.Play"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.Play CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.Play();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "away", n => { Away = n.GetStringValue(); } },
                { "clock", n => { Clock = n.GetObjectValue<global::CollegeFootballData.Models.Play_clock>(global::CollegeFootballData.Models.Play_clock.CreateFromDiscriminatorValue); } },
                { "defense", n => { Defense = n.GetStringValue(); } },
                { "defenseConference", n => { DefenseConference = n.GetStringValue(); } },
                { "defenseScore", n => { DefenseScore = n.GetIntValue(); } },
                { "defenseTimeouts", n => { DefenseTimeouts = n.GetIntValue(); } },
                { "distance", n => { Distance = n.GetIntValue(); } },
                { "down", n => { Down = n.GetIntValue(); } },
                { "driveId", n => { DriveId = n.GetStringValue(); } },
                { "driveNumber", n => { DriveNumber = n.GetIntValue(); } },
                { "gameId", n => { GameId = n.GetIntValue(); } },
                { "home", n => { Home = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "offense", n => { Offense = n.GetStringValue(); } },
                { "offenseConference", n => { OffenseConference = n.GetStringValue(); } },
                { "offenseScore", n => { OffenseScore = n.GetIntValue(); } },
                { "offenseTimeouts", n => { OffenseTimeouts = n.GetIntValue(); } },
                { "period", n => { Period = n.GetIntValue(); } },
                { "playNumber", n => { PlayNumber = n.GetIntValue(); } },
                { "playText", n => { PlayText = n.GetStringValue(); } },
                { "playType", n => { PlayType = n.GetStringValue(); } },
                { "ppa", n => { Ppa = n.GetDoubleValue(); } },
                { "scoring", n => { Scoring = n.GetBoolValue(); } },
                { "wallclock", n => { Wallclock = n.GetStringValue(); } },
                { "yardline", n => { Yardline = n.GetIntValue(); } },
                { "yardsGained", n => { YardsGained = n.GetIntValue(); } },
                { "yardsToGoal", n => { YardsToGoal = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("away", Away);
            writer.WriteObjectValue<global::CollegeFootballData.Models.Play_clock>("clock", Clock);
            writer.WriteStringValue("defense", Defense);
            writer.WriteStringValue("defenseConference", DefenseConference);
            writer.WriteIntValue("defenseScore", DefenseScore);
            writer.WriteIntValue("defenseTimeouts", DefenseTimeouts);
            writer.WriteIntValue("distance", Distance);
            writer.WriteIntValue("down", Down);
            writer.WriteStringValue("driveId", DriveId);
            writer.WriteIntValue("driveNumber", DriveNumber);
            writer.WriteIntValue("gameId", GameId);
            writer.WriteStringValue("home", Home);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("offense", Offense);
            writer.WriteStringValue("offenseConference", OffenseConference);
            writer.WriteIntValue("offenseScore", OffenseScore);
            writer.WriteIntValue("offenseTimeouts", OffenseTimeouts);
            writer.WriteIntValue("period", Period);
            writer.WriteIntValue("playNumber", PlayNumber);
            writer.WriteStringValue("playText", PlayText);
            writer.WriteStringValue("playType", PlayType);
            writer.WriteDoubleValue("ppa", Ppa);
            writer.WriteBoolValue("scoring", Scoring);
            writer.WriteStringValue("wallclock", Wallclock);
            writer.WriteIntValue("yardline", Yardline);
            writer.WriteIntValue("yardsGained", YardsGained);
            writer.WriteIntValue("yardsToGoal", YardsToGoal);
        }
    }
}
#pragma warning restore CS0618
