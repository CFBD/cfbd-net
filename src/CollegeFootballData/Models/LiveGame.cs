// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LiveGame : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The clock property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Clock { get; set; }
#nullable restore
#else
        public string Clock { get; set; }
#endif
        /// <summary>The distance property</summary>
        public int? Distance { get; set; }
        /// <summary>The down property</summary>
        public int? Down { get; set; }
        /// <summary>The drives property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.LiveGameDrive>? Drives { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.LiveGameDrive> Drives { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The period property</summary>
        public int? Period { get; set; }
        /// <summary>The possession property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Possession { get; set; }
#nullable restore
#else
        public string Possession { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The teams property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.LiveGameTeam>? Teams { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.LiveGameTeam> Teams { get; set; }
#endif
        /// <summary>The yardsToGoal property</summary>
        public int? YardsToGoal { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.LiveGame"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.LiveGame CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.LiveGame();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "clock", n => { Clock = n.GetStringValue(); } },
                { "distance", n => { Distance = n.GetIntValue(); } },
                { "down", n => { Down = n.GetIntValue(); } },
                { "drives", n => { Drives = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGameDrive>(global::CollegeFootballData.Models.LiveGameDrive.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "period", n => { Period = n.GetIntValue(); } },
                { "possession", n => { Possession = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "teams", n => { Teams = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGameTeam>(global::CollegeFootballData.Models.LiveGameTeam.CreateFromDiscriminatorValue)?.AsList(); } },
                { "yardsToGoal", n => { YardsToGoal = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("clock", Clock);
            writer.WriteIntValue("distance", Distance);
            writer.WriteIntValue("down", Down);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGameDrive>("drives", Drives);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("period", Period);
            writer.WriteStringValue("possession", Possession);
            writer.WriteStringValue("status", Status);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGameTeam>("teams", Teams);
            writer.WriteIntValue("yardsToGoal", YardsToGoal);
        }
    }
}
#pragma warning restore CS0618
