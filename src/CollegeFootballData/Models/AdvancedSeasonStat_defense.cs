// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AdvancedSeasonStat_defense : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The drives property</summary>
        public int? Drives { get; set; }
        /// <summary>The explosiveness property</summary>
        public double? Explosiveness { get; set; }
        /// <summary>The fieldPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_fieldPosition? FieldPosition { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_fieldPosition FieldPosition { get; set; }
#endif
        /// <summary>The havoc property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_havoc? Havoc { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_havoc Havoc { get; set; }
#endif
        /// <summary>The lineYards property</summary>
        public double? LineYards { get; set; }
        /// <summary>The lineYardsTotal property</summary>
        public int? LineYardsTotal { get; set; }
        /// <summary>The openFieldYards property</summary>
        public double? OpenFieldYards { get; set; }
        /// <summary>The openFieldYardsTotal property</summary>
        public int? OpenFieldYardsTotal { get; set; }
        /// <summary>The passingDowns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingDowns? PassingDowns { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingDowns PassingDowns { get; set; }
#endif
        /// <summary>The passingPlays property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingPlays? PassingPlays { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingPlays PassingPlays { get; set; }
#endif
        /// <summary>The plays property</summary>
        public int? Plays { get; set; }
        /// <summary>The pointsPerOpportunity property</summary>
        public double? PointsPerOpportunity { get; set; }
        /// <summary>The powerSuccess property</summary>
        public double? PowerSuccess { get; set; }
        /// <summary>The ppa property</summary>
        public double? Ppa { get; set; }
        /// <summary>The rushingPlays property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_rushingPlays? RushingPlays { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_rushingPlays RushingPlays { get; set; }
#endif
        /// <summary>The secondLevelYards property</summary>
        public double? SecondLevelYards { get; set; }
        /// <summary>The secondLevelYardsTotal property</summary>
        public int? SecondLevelYardsTotal { get; set; }
        /// <summary>The standardDowns property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_standardDowns? StandardDowns { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.AdvancedSeasonStat_defense_standardDowns StandardDowns { get; set; }
#endif
        /// <summary>The stuffRate property</summary>
        public double? StuffRate { get; set; }
        /// <summary>The successRate property</summary>
        public double? SuccessRate { get; set; }
        /// <summary>The totalOpportunies property</summary>
        public int? TotalOpportunies { get; set; }
        /// <summary>The totalPPA property</summary>
        public double? TotalPPA { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::CollegeFootballData.Models.AdvancedSeasonStat_defense"/> and sets the default values.
        /// </summary>
        public AdvancedSeasonStat_defense()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.AdvancedSeasonStat_defense"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.AdvancedSeasonStat_defense CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.AdvancedSeasonStat_defense();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "drives", n => { Drives = n.GetIntValue(); } },
                { "explosiveness", n => { Explosiveness = n.GetDoubleValue(); } },
                { "fieldPosition", n => { FieldPosition = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_fieldPosition>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_fieldPosition.CreateFromDiscriminatorValue); } },
                { "havoc", n => { Havoc = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_havoc>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_havoc.CreateFromDiscriminatorValue); } },
                { "lineYards", n => { LineYards = n.GetDoubleValue(); } },
                { "lineYardsTotal", n => { LineYardsTotal = n.GetIntValue(); } },
                { "openFieldYards", n => { OpenFieldYards = n.GetDoubleValue(); } },
                { "openFieldYardsTotal", n => { OpenFieldYardsTotal = n.GetIntValue(); } },
                { "passingDowns", n => { PassingDowns = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingDowns>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingDowns.CreateFromDiscriminatorValue); } },
                { "passingPlays", n => { PassingPlays = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingPlays>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingPlays.CreateFromDiscriminatorValue); } },
                { "plays", n => { Plays = n.GetIntValue(); } },
                { "pointsPerOpportunity", n => { PointsPerOpportunity = n.GetDoubleValue(); } },
                { "powerSuccess", n => { PowerSuccess = n.GetDoubleValue(); } },
                { "ppa", n => { Ppa = n.GetDoubleValue(); } },
                { "rushingPlays", n => { RushingPlays = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_rushingPlays>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_rushingPlays.CreateFromDiscriminatorValue); } },
                { "secondLevelYards", n => { SecondLevelYards = n.GetDoubleValue(); } },
                { "secondLevelYardsTotal", n => { SecondLevelYardsTotal = n.GetIntValue(); } },
                { "standardDowns", n => { StandardDowns = n.GetObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_standardDowns>(global::CollegeFootballData.Models.AdvancedSeasonStat_defense_standardDowns.CreateFromDiscriminatorValue); } },
                { "stuffRate", n => { StuffRate = n.GetDoubleValue(); } },
                { "successRate", n => { SuccessRate = n.GetDoubleValue(); } },
                { "totalOpportunies", n => { TotalOpportunies = n.GetIntValue(); } },
                { "totalPPA", n => { TotalPPA = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("drives", Drives);
            writer.WriteDoubleValue("explosiveness", Explosiveness);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_fieldPosition>("fieldPosition", FieldPosition);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_havoc>("havoc", Havoc);
            writer.WriteDoubleValue("lineYards", LineYards);
            writer.WriteIntValue("lineYardsTotal", LineYardsTotal);
            writer.WriteDoubleValue("openFieldYards", OpenFieldYards);
            writer.WriteIntValue("openFieldYardsTotal", OpenFieldYardsTotal);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingDowns>("passingDowns", PassingDowns);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_passingPlays>("passingPlays", PassingPlays);
            writer.WriteIntValue("plays", Plays);
            writer.WriteDoubleValue("pointsPerOpportunity", PointsPerOpportunity);
            writer.WriteDoubleValue("powerSuccess", PowerSuccess);
            writer.WriteDoubleValue("ppa", Ppa);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_rushingPlays>("rushingPlays", RushingPlays);
            writer.WriteDoubleValue("secondLevelYards", SecondLevelYards);
            writer.WriteIntValue("secondLevelYardsTotal", SecondLevelYardsTotal);
            writer.WriteObjectValue<global::CollegeFootballData.Models.AdvancedSeasonStat_defense_standardDowns>("standardDowns", StandardDowns);
            writer.WriteDoubleValue("stuffRate", StuffRate);
            writer.WriteDoubleValue("successRate", SuccessRate);
            writer.WriteIntValue("totalOpportunies", TotalOpportunies);
            writer.WriteDoubleValue("totalPPA", TotalPPA);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
