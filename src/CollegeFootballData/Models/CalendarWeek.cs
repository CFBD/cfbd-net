// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CalendarWeek : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The endDate property</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>The firstGameStart property</summary>
        [Obsolete("")]
        public DateTimeOffset? FirstGameStart { get; set; }
        /// <summary>The lastGameStart property</summary>
        [Obsolete("")]
        public DateTimeOffset? LastGameStart { get; set; }
        /// <summary>The season property</summary>
        public int? Season { get; set; }
        /// <summary>The seasonType property</summary>
        public global::CollegeFootballData.Models.SeasonType? SeasonType { get; set; }
        /// <summary>The startDate property</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary>The week property</summary>
        public int? Week { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.CalendarWeek"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.CalendarWeek CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.CalendarWeek();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "endDate", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                { "firstGameStart", n => { FirstGameStart = n.GetDateTimeOffsetValue(); } },
                { "lastGameStart", n => { LastGameStart = n.GetDateTimeOffsetValue(); } },
                { "season", n => { Season = n.GetIntValue(); } },
                { "seasonType", n => { SeasonType = n.GetEnumValue<global::CollegeFootballData.Models.SeasonType>(); } },
                { "startDate", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                { "week", n => { Week = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("endDate", EndDate);
            writer.WriteDateTimeOffsetValue("firstGameStart", FirstGameStart);
            writer.WriteDateTimeOffsetValue("lastGameStart", LastGameStart);
            writer.WriteIntValue("season", Season);
            writer.WriteEnumValue<global::CollegeFootballData.Models.SeasonType>("seasonType", SeasonType);
            writer.WriteDateTimeOffsetValue("startDate", StartDate);
            writer.WriteIntValue("week", Week);
        }
    }
}
#pragma warning restore CS0618
