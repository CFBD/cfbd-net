// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ReturningProduction : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The conference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conference { get; set; }
#nullable restore
#else
        public string Conference { get; set; }
#endif
        /// <summary>The passingUsage property</summary>
        public double? PassingUsage { get; set; }
        /// <summary>The percentPassingPPA property</summary>
        public double? PercentPassingPPA { get; set; }
        /// <summary>The percentPPA property</summary>
        public double? PercentPPA { get; set; }
        /// <summary>The percentReceivingPPA property</summary>
        public double? PercentReceivingPPA { get; set; }
        /// <summary>The percentRushingPPA property</summary>
        public double? PercentRushingPPA { get; set; }
        /// <summary>The receivingUsage property</summary>
        public double? ReceivingUsage { get; set; }
        /// <summary>The rushingUsage property</summary>
        public double? RushingUsage { get; set; }
        /// <summary>The season property</summary>
        public int? Season { get; set; }
        /// <summary>The team property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Team { get; set; }
#nullable restore
#else
        public string Team { get; set; }
#endif
        /// <summary>The totalPassingPPA property</summary>
        public double? TotalPassingPPA { get; set; }
        /// <summary>The totalPPA property</summary>
        public double? TotalPPA { get; set; }
        /// <summary>The totalReceivingPPA property</summary>
        public double? TotalReceivingPPA { get; set; }
        /// <summary>The totalRushingPPA property</summary>
        public double? TotalRushingPPA { get; set; }
        /// <summary>The usage property</summary>
        public double? Usage { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.ReturningProduction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.ReturningProduction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.ReturningProduction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "conference", n => { Conference = n.GetStringValue(); } },
                { "passingUsage", n => { PassingUsage = n.GetDoubleValue(); } },
                { "percentPPA", n => { PercentPPA = n.GetDoubleValue(); } },
                { "percentPassingPPA", n => { PercentPassingPPA = n.GetDoubleValue(); } },
                { "percentReceivingPPA", n => { PercentReceivingPPA = n.GetDoubleValue(); } },
                { "percentRushingPPA", n => { PercentRushingPPA = n.GetDoubleValue(); } },
                { "receivingUsage", n => { ReceivingUsage = n.GetDoubleValue(); } },
                { "rushingUsage", n => { RushingUsage = n.GetDoubleValue(); } },
                { "season", n => { Season = n.GetIntValue(); } },
                { "team", n => { Team = n.GetStringValue(); } },
                { "totalPPA", n => { TotalPPA = n.GetDoubleValue(); } },
                { "totalPassingPPA", n => { TotalPassingPPA = n.GetDoubleValue(); } },
                { "totalReceivingPPA", n => { TotalReceivingPPA = n.GetDoubleValue(); } },
                { "totalRushingPPA", n => { TotalRushingPPA = n.GetDoubleValue(); } },
                { "usage", n => { Usage = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("conference", Conference);
            writer.WriteDoubleValue("passingUsage", PassingUsage);
            writer.WriteDoubleValue("percentPassingPPA", PercentPassingPPA);
            writer.WriteDoubleValue("percentPPA", PercentPPA);
            writer.WriteDoubleValue("percentReceivingPPA", PercentReceivingPPA);
            writer.WriteDoubleValue("percentRushingPPA", PercentRushingPPA);
            writer.WriteDoubleValue("receivingUsage", ReceivingUsage);
            writer.WriteDoubleValue("rushingUsage", RushingUsage);
            writer.WriteIntValue("season", Season);
            writer.WriteStringValue("team", Team);
            writer.WriteDoubleValue("totalPassingPPA", TotalPassingPPA);
            writer.WriteDoubleValue("totalPPA", TotalPPA);
            writer.WriteDoubleValue("totalReceivingPPA", TotalReceivingPPA);
            writer.WriteDoubleValue("totalRushingPPA", TotalRushingPPA);
            writer.WriteDoubleValue("usage", Usage);
        }
    }
}
#pragma warning restore CS0618
