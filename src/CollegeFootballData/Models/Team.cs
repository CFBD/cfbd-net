// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Team : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The abbreviation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Abbreviation { get; set; }
#nullable restore
#else
        public string Abbreviation { get; set; }
#endif
        /// <summary>The alternateColor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlternateColor { get; set; }
#nullable restore
#else
        public string AlternateColor { get; set; }
#endif
        /// <summary>The alternateNames property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AlternateNames { get; set; }
#nullable restore
#else
        public List<string> AlternateNames { get; set; }
#endif
        /// <summary>The classification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Classification { get; set; }
#nullable restore
#else
        public string Classification { get; set; }
#endif
        /// <summary>The color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Color { get; set; }
#nullable restore
#else
        public string Color { get; set; }
#endif
        /// <summary>The conference property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Conference { get; set; }
#nullable restore
#else
        public string Conference { get; set; }
#endif
        /// <summary>The division property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Division { get; set; }
#nullable restore
#else
        public string Division { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CollegeFootballData.Models.Venue? Location { get; set; }
#nullable restore
#else
        public global::CollegeFootballData.Models.Venue Location { get; set; }
#endif
        /// <summary>The logos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Logos { get; set; }
#nullable restore
#else
        public List<string> Logos { get; set; }
#endif
        /// <summary>The mascot property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mascot { get; set; }
#nullable restore
#else
        public string Mascot { get; set; }
#endif
        /// <summary>The school property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? School { get; set; }
#nullable restore
#else
        public string School { get; set; }
#endif
        /// <summary>The twitter property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Twitter { get; set; }
#nullable restore
#else
        public string Twitter { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.Team"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.Team CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.Team();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "abbreviation", n => { Abbreviation = n.GetStringValue(); } },
                { "alternateColor", n => { AlternateColor = n.GetStringValue(); } },
                { "alternateNames", n => { AlternateNames = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "classification", n => { Classification = n.GetStringValue(); } },
                { "color", n => { Color = n.GetStringValue(); } },
                { "conference", n => { Conference = n.GetStringValue(); } },
                { "division", n => { Division = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "location", n => { Location = n.GetObjectValue<global::CollegeFootballData.Models.Venue>(global::CollegeFootballData.Models.Venue.CreateFromDiscriminatorValue); } },
                { "logos", n => { Logos = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "mascot", n => { Mascot = n.GetStringValue(); } },
                { "school", n => { School = n.GetStringValue(); } },
                { "twitter", n => { Twitter = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("abbreviation", Abbreviation);
            writer.WriteStringValue("alternateColor", AlternateColor);
            writer.WriteCollectionOfPrimitiveValues<string>("alternateNames", AlternateNames);
            writer.WriteStringValue("classification", Classification);
            writer.WriteStringValue("color", Color);
            writer.WriteStringValue("conference", Conference);
            writer.WriteStringValue("division", Division);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::CollegeFootballData.Models.Venue>("location", Location);
            writer.WriteCollectionOfPrimitiveValues<string>("logos", Logos);
            writer.WriteStringValue("mascot", Mascot);
            writer.WriteStringValue("school", School);
            writer.WriteStringValue("twitter", Twitter);
        }
    }
}
#pragma warning restore CS0618
