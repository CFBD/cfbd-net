// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CollegeFootballData.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LiveGameDrive : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The defense property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Defense { get; set; }
#nullable restore
#else
        public string Defense { get; set; }
#endif
        /// <summary>The defenseId property</summary>
        public int? DefenseId { get; set; }
        /// <summary>The duration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Duration { get; set; }
#nullable restore
#else
        public string Duration { get; set; }
#endif
        /// <summary>The endClock property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndClock { get; set; }
#nullable restore
#else
        public string EndClock { get; set; }
#endif
        /// <summary>The endPeriod property</summary>
        public int? EndPeriod { get; set; }
        /// <summary>The endYardsToGoal property</summary>
        public int? EndYardsToGoal { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The offense property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Offense { get; set; }
#nullable restore
#else
        public string Offense { get; set; }
#endif
        /// <summary>The offenseId property</summary>
        public int? OffenseId { get; set; }
        /// <summary>The playCount property</summary>
        public int? PlayCount { get; set; }
        /// <summary>The plays property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CollegeFootballData.Models.LiveGamePlay>? Plays { get; set; }
#nullable restore
#else
        public List<global::CollegeFootballData.Models.LiveGamePlay> Plays { get; set; }
#endif
        /// <summary>The pointsGained property</summary>
        public int? PointsGained { get; set; }
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Result { get; set; }
#nullable restore
#else
        public string Result { get; set; }
#endif
        /// <summary>The scoringOpportunity property</summary>
        public bool? ScoringOpportunity { get; set; }
        /// <summary>The startClock property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartClock { get; set; }
#nullable restore
#else
        public string StartClock { get; set; }
#endif
        /// <summary>The startPeriod property</summary>
        public int? StartPeriod { get; set; }
        /// <summary>The startYardsToGoal property</summary>
        public int? StartYardsToGoal { get; set; }
        /// <summary>The yards property</summary>
        public int? Yards { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CollegeFootballData.Models.LiveGameDrive"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CollegeFootballData.Models.LiveGameDrive CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CollegeFootballData.Models.LiveGameDrive();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "defense", n => { Defense = n.GetStringValue(); } },
                { "defenseId", n => { DefenseId = n.GetIntValue(); } },
                { "duration", n => { Duration = n.GetStringValue(); } },
                { "endClock", n => { EndClock = n.GetStringValue(); } },
                { "endPeriod", n => { EndPeriod = n.GetIntValue(); } },
                { "endYardsToGoal", n => { EndYardsToGoal = n.GetIntValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "offense", n => { Offense = n.GetStringValue(); } },
                { "offenseId", n => { OffenseId = n.GetIntValue(); } },
                { "playCount", n => { PlayCount = n.GetIntValue(); } },
                { "plays", n => { Plays = n.GetCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGamePlay>(global::CollegeFootballData.Models.LiveGamePlay.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pointsGained", n => { PointsGained = n.GetIntValue(); } },
                { "result", n => { Result = n.GetStringValue(); } },
                { "scoringOpportunity", n => { ScoringOpportunity = n.GetBoolValue(); } },
                { "startClock", n => { StartClock = n.GetStringValue(); } },
                { "startPeriod", n => { StartPeriod = n.GetIntValue(); } },
                { "startYardsToGoal", n => { StartYardsToGoal = n.GetIntValue(); } },
                { "yards", n => { Yards = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("defense", Defense);
            writer.WriteIntValue("defenseId", DefenseId);
            writer.WriteStringValue("duration", Duration);
            writer.WriteStringValue("endClock", EndClock);
            writer.WriteIntValue("endPeriod", EndPeriod);
            writer.WriteIntValue("endYardsToGoal", EndYardsToGoal);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("offense", Offense);
            writer.WriteIntValue("offenseId", OffenseId);
            writer.WriteIntValue("playCount", PlayCount);
            writer.WriteCollectionOfObjectValues<global::CollegeFootballData.Models.LiveGamePlay>("plays", Plays);
            writer.WriteIntValue("pointsGained", PointsGained);
            writer.WriteStringValue("result", Result);
            writer.WriteBoolValue("scoringOpportunity", ScoringOpportunity);
            writer.WriteStringValue("startClock", StartClock);
            writer.WriteIntValue("startPeriod", StartPeriod);
            writer.WriteIntValue("startYardsToGoal", StartYardsToGoal);
            writer.WriteIntValue("yards", Yards);
        }
    }
}
#pragma warning restore CS0618
