// <auto-generated/>
#pragma warning disable CS0618
using CollegeFootballData.Calendar;
using CollegeFootballData.Coaches;
using CollegeFootballData.Conferences;
using CollegeFootballData.Draft;
using CollegeFootballData.Drives;
using CollegeFootballData.Game;
using CollegeFootballData.Games;
using CollegeFootballData.Info;
using CollegeFootballData.Lines;
using CollegeFootballData.Live;
using CollegeFootballData.Metrics;
using CollegeFootballData.Player;
using CollegeFootballData.Plays;
using CollegeFootballData.Ppa;
using CollegeFootballData.Rankings;
using CollegeFootballData.Ratings;
using CollegeFootballData.Records;
using CollegeFootballData.Recruiting;
using CollegeFootballData.Roster;
using CollegeFootballData.Scoreboard;
using CollegeFootballData.Stats;
using CollegeFootballData.Talent;
using CollegeFootballData.Teams;
using CollegeFootballData.Venues;
using CollegeFootballData.Wepa;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace CollegeFootballData
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiClient : BaseRequestBuilder
    {
        /// <summary>The calendar property</summary>
        public global::CollegeFootballData.Calendar.CalendarRequestBuilder Calendar
        {
            get => new global::CollegeFootballData.Calendar.CalendarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The coaches property</summary>
        public global::CollegeFootballData.Coaches.CoachesRequestBuilder Coaches
        {
            get => new global::CollegeFootballData.Coaches.CoachesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The conferences property</summary>
        public global::CollegeFootballData.Conferences.ConferencesRequestBuilder Conferences
        {
            get => new global::CollegeFootballData.Conferences.ConferencesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The draft property</summary>
        public global::CollegeFootballData.Draft.DraftRequestBuilder Draft
        {
            get => new global::CollegeFootballData.Draft.DraftRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The drives property</summary>
        public global::CollegeFootballData.Drives.DrivesRequestBuilder Drives
        {
            get => new global::CollegeFootballData.Drives.DrivesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The game property</summary>
        public global::CollegeFootballData.Game.GameRequestBuilder Game
        {
            get => new global::CollegeFootballData.Game.GameRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The games property</summary>
        public global::CollegeFootballData.Games.GamesRequestBuilder Games
        {
            get => new global::CollegeFootballData.Games.GamesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The info property</summary>
        public global::CollegeFootballData.Info.InfoRequestBuilder Info
        {
            get => new global::CollegeFootballData.Info.InfoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The lines property</summary>
        public global::CollegeFootballData.Lines.LinesRequestBuilder Lines
        {
            get => new global::CollegeFootballData.Lines.LinesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The live property</summary>
        public global::CollegeFootballData.Live.LiveRequestBuilder Live
        {
            get => new global::CollegeFootballData.Live.LiveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The metrics property</summary>
        public global::CollegeFootballData.Metrics.MetricsRequestBuilder Metrics
        {
            get => new global::CollegeFootballData.Metrics.MetricsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The player property</summary>
        public global::CollegeFootballData.Player.PlayerRequestBuilder Player
        {
            get => new global::CollegeFootballData.Player.PlayerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The plays property</summary>
        public global::CollegeFootballData.Plays.PlaysRequestBuilder Plays
        {
            get => new global::CollegeFootballData.Plays.PlaysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ppa property</summary>
        public global::CollegeFootballData.Ppa.PpaRequestBuilder Ppa
        {
            get => new global::CollegeFootballData.Ppa.PpaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rankings property</summary>
        public global::CollegeFootballData.Rankings.RankingsRequestBuilder Rankings
        {
            get => new global::CollegeFootballData.Rankings.RankingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ratings property</summary>
        public global::CollegeFootballData.Ratings.RatingsRequestBuilder Ratings
        {
            get => new global::CollegeFootballData.Ratings.RatingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The records property</summary>
        public global::CollegeFootballData.Records.RecordsRequestBuilder Records
        {
            get => new global::CollegeFootballData.Records.RecordsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The recruiting property</summary>
        public global::CollegeFootballData.Recruiting.RecruitingRequestBuilder Recruiting
        {
            get => new global::CollegeFootballData.Recruiting.RecruitingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roster property</summary>
        public global::CollegeFootballData.Roster.RosterRequestBuilder Roster
        {
            get => new global::CollegeFootballData.Roster.RosterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scoreboard property</summary>
        public global::CollegeFootballData.Scoreboard.ScoreboardRequestBuilder Scoreboard
        {
            get => new global::CollegeFootballData.Scoreboard.ScoreboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The stats property</summary>
        public global::CollegeFootballData.Stats.StatsRequestBuilder Stats
        {
            get => new global::CollegeFootballData.Stats.StatsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The talent property</summary>
        public global::CollegeFootballData.Talent.TalentRequestBuilder Talent
        {
            get => new global::CollegeFootballData.Talent.TalentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The teams property</summary>
        public global::CollegeFootballData.Teams.TeamsRequestBuilder Teams
        {
            get => new global::CollegeFootballData.Teams.TeamsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The venues property</summary>
        public global::CollegeFootballData.Venues.VenuesRequestBuilder Venues
        {
            get => new global::CollegeFootballData.Venues.VenuesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The wepa property</summary>
        public global::CollegeFootballData.Wepa.WepaRequestBuilder Wepa
        {
            get => new global::CollegeFootballData.Wepa.WepaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::CollegeFootballData.ApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://api.collegefootballdata.com";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618
